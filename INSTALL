OBSY Personal Observatory Management System
Installation Guide 0.01 (Pre-release)

To install Obsy first clone the repository from github:

git clone https://github.com/gordtulloch/obsy.git

Create a new virtual environment for Obsy

python -m venv .venv
.venv\scripts\activate.bat  (in Windows)
source ./venv/bin/activate  (Linux)

Next install all of the required dependencies with pip:

pip install -r requirements.txt

Create the database server structure and load all of the core Obsy tables:

$ python manage.py migrate
$ python manage.py loaddata obsy.json

Finally run the server 

python manage.py runserver

# Asynchronous Tasks
Obsy uses Celery to schedule tasks, and RabbitMQ.for message passing. 

sudo apt-get install rabbitmq-server
pip install celery
# Start the Celery worker
celery -A obsy worker --loglevel=info

# Start the Celery Beat scheduler
celery -A obsy beat --loglevel=info

# Private settings
Some settings are used for testing but can't be added to the repository. These are stored in a file named obsy/private.ini. 
This file is not included in the repository and must be created the first time the program is run. It will be created with default settings 
so please edit this file appropriately.

Yes, Celery provides a monitoring tool called Flower, which is a real-time web-based monitoring tool for Celery. Flower provides a dashboard to monitor task progress, inspect task and worker status, and manage Celery tasks.

To install Flower, use the following command:
```bash
pip install flower
```

To start Flower, run the following command:
```bash
celery -A obsy flower
```

This will start the Flower web server, and you can access the Flower dashboard by navigating to `http://localhost:5555` in your web browser.

Flower provides a comprehensive interface to monitor and manage your Celery tasks and workers, including the ability to:
- View task progress and history
- Monitor worker status and performance
- Inspect scheduled tasks
- Manage task queues

This should help you manage your Celery and beat processes more effectively.

